local controller = require "scripts.controller"

go.property("ground_count", 9)
go.property("star_count", 15)

local hero_msg = msg.url("main", "/bunny", "Hero")

local function insetRects (_type, _count)
	local _pos = vmath.vector3()
	local _size = vmath.vector3()
	local _sprite_url = msg.url()
	local _name = ""

	for i = 1, _count do
		_name = _type..i
		_pos = go.get_position(_name)
		_sprite_url = msg.url(_name.."#sprite")
		_size = go.get(_sprite_url, "size")
		local id = controller.addRect("World",_pos, _size, _type, _name, _sprite_url )	

	end	
end


function init(self)
	msg.post('.', 'acquire_input_focus')
	msg.post("@render:", "clear_color", { color = vmath.vector4(75/255, 57/255, 22/255, 0) } )
	controller.reset()	

	--defos.set_window_title("DAABBCC Platformer")
	--defos.toggle_fullscreen()
	local pos = go.get_world_position("bunny")
	--defos.move_cursor_to(pos.x, pos.y)
	--x, y, w, h = defos.get_view_size()
	--defos.set_cursor_pos(w/2, h/2)

	--daabbcc.createTree("world", 2, 0.0, 100)

	insetRects("ground", self.ground_count)
	insetRects("collectable", self.star_count)

	-- Hero	
	msg.post(hero_msg, "set_hero")
	
	controller.play_sfx("music", 0.2)
	daabbcc.rebuildTree("World")
end



function on_input(self, action_id, action)
	if action_id == hash("_TOGGLEPROFILER") and action.pressed then		
		msg.post("@system:", "toggle_profile")
	end
	if action_id == hash("_EXIT") and action.pressed then		
		msg.post("@system:", "exit", {code = 0})
	end

end

function final(self)
	--- Clean up the tree and table	
	for k, v in pairs( controller.world["grounds"] ) do	
		daabbcc.removeAABB("World", v["treeID"])
	end

	for k, v in pairs( controller.world["collectables"] ) do	
		daabbcc.removeAABB("World", v["treeID"])
	end

	for k, v in pairs( controller.world["platforms"] ) do	
		daabbcc.removeAABB("World", v["treeID"])
	end

end

